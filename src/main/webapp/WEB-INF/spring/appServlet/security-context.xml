<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- <http auto-config="true" use-expressions="true"> return boolean </http> -->
	<context:component-scan
		base-package="com.ideaall.infinite" />
	<beans:bean id="customizeUserDetailsService"
		class="com.ideaall.infinite.security.CustomizeUserDetailsService" />
	<beans:bean id="customAuthenticationFailHandler"
		class="com.ideaall.infinite.handler.CustomAuthenticationFailHandler" />

	<http security="none" pattern="/resources/**" />
	<http security="none" pattern="/ws/**" />





	<http use-expressions="true">
		<!-- EL(expression language) 표현식 -->
		<!-- return boolean -->
		<intercept-url pattern="/user/reserve_view" access="hasRole('ROLE_ADMIN')" />
		<intercept-url pattern="/user/reserve_apply" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" />
		
		<intercept-url pattern="/admin/member/insert" access="permitAll()" /><!-- -->
		<intercept-url pattern="/admin/member/*" access="hasAnyRole('ROLE_USER','ROLE_ADMIN')" /><!-- -->
		<intercept-url pattern="/admin/*/*" access="hasRole('ROLE_ADMIN')" /> <!-- -->
		
		<intercept-url pattern="/reserve/*" access="permitAll()" />
		
		<intercept-url pattern="/common/*" access="permitAll()" />
		
		<intercept-url pattern="/main/*" access="permitAll()" /><!-- -->
		
		<intercept-url pattern="/**" access="permitAll()" /><!-- -->


		<form-login login-page="/common?action=login"
			default-target-url="/"
			login-processing-url="/j_spring_security_check"
			authentication-failure-url="/common?action=login&amp;fail=true"
			username-parameter="id" password-parameter="password" />

		<!-- access denied url -->
		<access-denied-handler
			error-page="/exception/403" />

		<!-- 로그아웃 관련 설정 -->
		<logout logout-success-url="/"
			logout-url="/j_spring_security_logout" invalidate-session="true"
			delete-cookies="JSESSIONID" />

		<!-- 세션 관련 설정 -->
		<session-management>
			<concurrency-control max-sessions="1"
				error-if-maximum-exceeded="false" expired-url="/" />
		</session-management>

		<!-- 사용자 인증 토큰 구성 -->
		<remember-me token-validity-seconds="1209600"
			remember-me-parameter="remember-me" />

		<!-- HTTP 응답 추가하는 보안 헤더 설정 -->
		<headers>
			<cache-control />
			<xss-protection />
		</headers>

		<!-- enable csrf protection -->
		<csrf disabled="true" />
	</http>

	<authentication-manager>
		<authentication-provider
			user-service-ref="customizeUserDetailsService">
			<!-- <password-encoder hash="bcrypt" /> -->
		</authentication-provider>
	</authentication-manager>


	<!-- <authentication-manager> <authentication-provider user-service-ref="customizeUserDetailsService" 
		/> </authentication-manager> <authentication-manager> <authentication-provider 
		user-service-ref="customizeUserDetailsService"> <password-encoder hash="bcrypt" 
		/> </authentication-provider> </authentication-manager> -->

</beans:beans>